Index: extensions/SemanticMediaWiki/includes/SMW_DataValueFactory.php
===================================================================
--- extensions/SemanticMediaWiki/includes/SMW_DataValueFactory.php	(revision 13818)
+++ extensions/SemanticMediaWiki/includes/SMW_DataValueFactory.php	(working copy)
@@ -126,7 +126,10 @@
 	 * @return SMWDataValue
 	 */
 	static public function newDataItemValue( SMWDataItem $dataItem, $property, $caption = false ) {
-		if ( !is_null( $property ) ) {
+		if ($dataItem->getDiType() == 101) {
+            // SMWDIIntegrationUri::TYPE_INTEGRATIONURI
+            $typeid = '_ili';
+        } else if ( !is_null( $property ) ) {
 			$typeId = $property->findPropertyTypeID();
 		} else {
 			$typeId = self::$mDefaultDataItemTypeIds[$dataItem->getDiType()];
Index: extensions/SemanticMediaWiki/includes/dataitems/SMW_DataItem.php
===================================================================
--- extensions/SemanticMediaWiki/includes/dataitems/SMW_DataItem.php	(revision 13818)
+++ extensions/SemanticMediaWiki/includes/dataitems/SMW_DataItem.php	(working copy)
@@ -42,8 +42,29 @@
  * @ingroup SMWDataItems
  */
 abstract class SMWDataItem {
+    
+	/// Patch:KK|Metadata data|Start
+    private $m_metadata = array();
+    private $m_metadataTypes = array();
+
+    public function setMetadata($mdProperty, $mdType, $mdValue) {
+        $this->m_metadata[$mdProperty] = $mdValue;
+        $this->m_metadataTypes[$mdProperty] = $mdType;
+    }
 
-	/// Data item ID that can be used to indicate that no data item class is appropriate
+    public function getMetadata($mdProperty) {
+        return array_key_exists($mdProperty, $this->m_metadata) ? $this->m_metadata[$mdProperty] : '';
+    }
+
+    public function getMetadataType($mdProperty) {
+        return array_key_exists($mdProperty, $this->m_metadataTypes) ? $this->m_metadataTypes[$mdProperty] : '';
+    }
+
+    public function getMetadataMap() {
+        return $this->m_metadata;
+    }
+    /// Patch:KK|Metadata data|End
+	// Data item ID that can be used to indicate that no data item class is appropriate
 	const TYPE_NOTYPE    = 0;
 	/// Data item ID for SMWDINumber
 	const TYPE_NUMBER    = 1;
